{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-no-distraction-index-mdx-3f0dcdf26eec0c592faf.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./content/posts/no-distraction/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ol: \"ol\",\n    li: \"li\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"You don't need to multitask. You don't need 24/7 entertainment. Entertainment is what you make it. All those YouTubers don't have much to say that is relevant to you anyway - you're not missing out on anything. Music is best enjoyed in peace and without distractions, you don't need to reduce it to mere background noise. New information is best processed in peace and without distractions. Spamming memes to friends is not quality communication, so you might as well quit it.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Do one thing at a time. Relax. There is time for everything that's really important and what's not important you can simply ignore.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"What? You already have work to do, but you're distracted? Internet browsing won't help you there. Go out for a brisk 5-minute walk. Or do 20 pushups if you're at home. Or have a glass of water. Or close your eyes for a minute. Then return to what you were doing before you got distracted. If you're feeling tired, then slow down rather than overloading your brain with even more information. Focus on the little details of what you're doing, if you find yourself stuck and unable to think. Reorganize your desk. Do something, just don't resort to mindless browsing. You know mindless browsing won't feel good, and you know you have other things you want to do that will make you feel good. Do them. Don't browse.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"You don't have work to do? There is always housework to be done and browsing won't do your chores. Tidy up the house & clean. Throw away things you don't need anymore. Go out shopping for things that you do need right now. Cook.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Chores all done? Study to get better at what you're doing. Regardless of what you're doing, there are always new areas to improve in.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Need a break from studying? Call friends to meet up, or go out to meet new people. Go have a beer in the bar, even if you don't plan on meeting anyone - just be around people for a while.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"People suck? Books don't. Read for pleasure. Go visit the library. Write a review for the last book you read.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Books are boring? Go to the movies, go to theatre, go to a concert, go to an art gallery or a museum. Or just go out alone for a walk.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Rainy day? No money for tickets? Listen to music but don't multitask - focus all your attention on what you're listening to.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Heard all your albums a hundred times over? Improve your foreign language skills.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Not planning to travel any time soon? Play some guitar.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Neighbors complaining? Watch a film or TV series but really watch it - don't be on your phone while you're watching.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Nothing good to see? Play something.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"What? You don't feel like doing anything? Take an actual nap, instead of burning yourself out even more by browsing. Write about your day in your diary (make a diary if you don't have one). Reflect on what happened today. Check what you have coming for tomorrow. Meditate. Take a shower. Relax, man.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, null, \"Acknowledgements:\"), \"\\n\", React.createElement(_components.p, null, \"I \", React.createElement(_components.a, {\n    href: \"https://github.com/vijethph\"\n  }, \"(@vijethph)\"), \" just found this while browsing Reddit, thought it was good, and put up here with some modifications of my own. The original work and credit all go to whoever posted this up on Reddit (I don't know their name). So, I thank them for sharing this valuable material.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/ruminations/ruminations/content/posts/no-distraction/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","_createMdxContent","_components","Object","assign","ol","li","p","blockquote","hr","h2","_provideComponents","components","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}